input_stream: "input_video"
input_stream:  "input_audio"
output_stream: "output_video"

# Calculate diff on image and only send on when large diff is detected
node: {
  calculator: "ImageMovementDetector"
  input_stream: "input_video"
  output_stream: "motion_detected"
  map_node_options: {
    doubleOptions: { key:"threshold"; value:0.01 }
    doubleOptions: { key:"min_fps"; value:1.0 }
    doubleOptions: { key:"max_fps"; value:4.0 }
  }
}

node: {
  calculator: "HandDetector"
  input_stream: "motion_detected"
  output_stream: "output_video"
  output_stream: "hand_detections"
}

node: {
  calculator: "HandThumbDetector"
  input_stream: "hand_detections"
  output_stream: "thumb_detections"
}

node: {
  calculator: "VoskVoiceToTextCalculator"
  input_stream: "input_audio"
  output_stream: "voice_to_text"
  output_stream: "voice_to_word"
}

node: {
  calculator: "ShowStatusImageFromFiles"
  input_stream: "voice_to_word"
  output_stream: "voice_status"
  map_node_options: {
    stringOptions: { key:"onImage"; value:"images/on.png" }
    stringOptions: { key:"onWord";  value:"open" }
    stringOptions: { key:"offImage"; value:"images/off.png" }
    doubleOptions: { key:"statusOnTime"; value: 4.0 }
  }
}

node: {
  calculator: "ShowStatusImageFromFiles"
  input_stream: "thumb_detections"
  output_stream: "thumb_status"
  map_node_options: {
    stringOptions: { key:"onImage"; value:"images/on.png" }
    stringOptions: { key:"onWord";  value:"Thumb up" }
    stringOptions: { key:"offImage"; value:"images/off.png" }
    doubleOptions: { key:"statusOnTime"; value: 4.0 }
  }
}

node: {
    calculator: "ShowImage"
    input_stream: "thumb_status"
    map_node_options: {
        stringOptions: { key:"windowTitle"; value:"Thumb Status" }
    }
}

node: {
    calculator: "ShowImage"
    input_stream: "voice_status"
    map_node_options: {
        stringOptions: { key:"windowTitle"; value:"Voice Status" }
    }
}


node: {
  calculator: "ConsumerNode"
  input_stream: "voice_to_text"
}
